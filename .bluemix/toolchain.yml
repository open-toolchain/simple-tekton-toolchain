version: '2'
messages:
  $i18n: locales.yml
template:
  name:
    $ref: "#/messages/template.name"
  description:
    $ref: >
      $env.source_provider === 'githubconsolidated' ? 
      '#/messages/template.description.github' : '#/messages/template.description'
  header: '![](toolchain.svg?localize)'
  icon: secure-lock-kubernetes.svg
  required:
    - build
    - repo
  info:
    git url: >
        '[' + $env.repository + '](' + $env.repository + ')'
    git branch: >
        $env.branch ?
          '[' + $env.branch + ']('+ $env.repository + '/tree/' + $env.branch + ')' :
          '[master]('+ $env.repository + '/tree/master)'
toolchain:
  name: 'simple-tekton-toolchain-{{timestamp}}'
  template:
    getting_started:
      $ref: "#/messages/template.gettingStarted" 
services:
  repo:
    service_id: >
      $env.source_provider ? $env.source_provider : 'githubpublic'
    parameters:
      repo_name: '{{toolchain.name}}'
      repo_url: >
        $env.type === 'link' ? $env.app_repo :
          $env.sourceZipUrl ? '{{sourceZipUrl}}' :
            'https://github.com/open-toolchain/hello-tekton'
      source_repo_url: >
        $env.type === 'fork' || $env.type === 'clone' ? $env.app_repo :
          $env.sourceZipUrl ? '{{sourceZipUrl}}' : 'https://github.com/open-toolchain/hello-tekton'
      type: $env.type || 'clone'
      has_issues: true
      enable_traceability: true
  build:
    service_id: pipeline
    parameters:
      services:
        - repo
      name: '{{services.repo.parameters.repo_name}}'
      type: tekton
      ui-pipeline: true
      configuration:
        content:
          $text: tekton.yaml
        env:
          GIT_REPO: repo
          CF_APP_NAME: '{{form.pipeline.parameters.app-name}}'
          REGISTRY_REGION_ID: '{{form.pipeline.parameters.registry-region}}'
          REGISTRY_NAMESPACE: '{{form.pipeline.parameters.registry-namespace}}'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
          PROD_CLUSTER_NAME: '{{form.pipeline.parameters.prod-cluster-name}}'
          PROD_CLUSTER_NAMESPACE: '{{form.pipeline.parameters.prod-cluster-namespace}}'
          REPOSITORY: '{{services.repo.parameters.source_repo_url}}'
          REVISION: master
        execute: true
  webide:
    service_id: orion
form:
  pipeline:
    parameters:
      app-name: '{{services.repo.parameters.repo_name}}'
      prod-cluster-namespace: prod
    schema:
      $ref: deploy.json
